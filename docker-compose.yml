version: "3.8"

services:
  app:
    build: .
    stop_grace_period: 0s
    container_name: whisperx_app
    restart: always
    ports:
      - "5000:5000"
    environment:
      - FLASK_RUN_HOST=0.0.0.0
      - WHISPERX_MODEL=tiny
      - BATCH_SIZE=8
    volumes:
      - ./torch-hub/:/root/.cache/torch/hub/
      - ./uploads:/app/uploads
    command: ["gunicorn", "-b", "0.0.0.0:5000", "--workers", "1", "--timeout", "300", "app:app"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:5000/healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  test_transcribe:
    stop_grace_period: 0s
    image: curlimages/curl:latest
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - ./test_audio:/test_audio  # Mount local audio folder
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        echo "App is up! Running /transcribe test..."

        # Convert audio file to Base64
        
        echo "{\"audio\": \"$(base64 -w 0 /test_audio/sample.aac)\"}" > /tmp/request.json

        # Send the transcription request using the JSON file
        curl -X POST http://app:5000/transcribe \
          -H "Content-Type: application/json" \
          --data @/tmp/request.json

        echo "/transcribe test completed!"

  test_align:
    stop_grace_period: 0s
    image: curlimages/curl:latest
    depends_on:
      app:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        echo "App is up! Running /align test..."

        curl -X POST http://app:5000/align \
          -H "Content-Type: application/json" \
          -d '{"audio": "BASE64_ENCODED_AUDIO_STRING", "segments": [{"text": "Hello world"}]}'

        echo "/align test completed!"
